diff --git a/scripts/build/chroot_hooks b/scripts/build/chroot_hooks
index 67d164bce..3111af916 100755
--- a/scripts/build/chroot_hooks
+++ b/scripts/build/chroot_hooks
@@ -72,12 +72,12 @@ rmdir chroot/root/lb_chroot_hooks
 rmdir --ignore-fail-on-non-empty chroot/root
 
 ## Processing local hooks
-if ls config/hooks/normal/*.chroot config/hooks/live/*.chroot > /dev/null 2>&1
+if ls config/hooks/normal/*.chroot config/hooks/live/*.chroot config/hooks/live/*.container > /dev/null 2>&1
 then
 	# Restoring cache
 	Restore_package_cache chroot
 
-	for HOOK in config/hooks/normal/*.chroot config/hooks/live/*.chroot
+	for HOOK in config/hooks/normal/*.chroot config/hooks/live/*.chroot config/hooks/live/*.container
 	do
 		if [ ! -e "${HOOK}" ]
 		then
@@ -94,7 +94,17 @@ then
 		fi
 
 		# Executing hook
-		Chroot chroot "/root/$(basename ${HOOK})" || { Echo_error "${HOOK} failed (exit non-zero). You should check for errors."; exit 1 ;}
+		Echo_message "Executing hook ${HOOK}..."
+		case ${HOOK} in
+			*.container)
+				umount chroot/proc
+				systemd-nspawn --capability=all -D chroot "/root/$(basename ${HOOK})" || { Echo_error "${HOOK} failed (exit non-zero). You should check for errors."; exit 1 ;}
+				mount proc-live -t proc chroot/proc
+				;;
+			*)
+				Chroot chroot "/root/$(basename ${HOOK})" || { Echo_error "${HOOK} failed (exit non-zero). You should check for errors."; exit 1 ;}
+				;;
+		esac
 
 		# Removing hook
 		rm -f chroot/root/"$(basename ${HOOK})"
