Linux 4.0: patching in aufs completely (see aufs README):
---------------------------------------------------------
- cd linux-sources
- patch -p1 </home/blah/aufs4-standalone/aufs4-base.patch
- patch -p1 </home/blah/aufs4-standalone/aufs4-kbuild.patch
- patch -p1 </home/blah/aufs4-standalone/aufs4-mmap.patch
- patch -p1 </home/blah/aufs4-standalone/aufs4-standalone.patch
- copy ./{Documentation,fs,include/uapi/linux/aufs_type.h} files to your  kernel source tree
- add to debian/config/config (see previous kernels) to build module:
##
## file: fs/aufs/Kconfig
##
CONFIG_AUFS_FS=m
## choice: Maximum number of branches
CONFIG_AUFS_BRANCH_MAX_127=y
# CONFIG_AUFS_BRANCH_MAX_511 is not set
# CONFIG_AUFS_BRANCH_MAX_1023 is not set
# CONFIG_AUFS_BRANCH_MAX_32767 is not set
## end choice
# CONFIG_AUFS_HNOTIFY is not set
CONFIG_AUFS_EXPORT=y
# CONFIG_AUFS_FHSM is not set
# CONFIG_AUFS_RDU is not set
# CONFIG_AUFS_SHWH is not set
# CONFIG_AUFS_BR_RAMFS is not set
# CONFIG_AUFS_BR_FUSE is not set
CONFIG_AUFS_BR_HFSPLUS=y
# CONFIG_AUFS_DEBUG is not set


Linux 4.1: patching in missing aufs parts:
------------------------------------------
- patch -p1 </home/blah/aufs4-standalone/aufs4-kbuild.patch
- copy ./{Documentation,fs,include/uapi/linux/aufs_type.h} files to your  kernel source tree
- add to debian/config/config (see above) to build module
- call dpkg-source --commit to add a quilt patch


Common steps:
-------------
- apply own patches
	- copy existing quilt patches to debian/patches
	- patch -p1 < debian/patches/<name of quilt file>
	- add necessary statements to debian/config/config (e.g. CONFIG_SURFACE_PRO3_BUTTON=m)
- backport linux-tools
	- apt-get source --only-source linux-tools=x.y.z
	- in chroot: apt-get install liblzma-dev
	- call "dpkg-buildpackage -sa" two times in a row
- put new linux-tools packages into local "unfinished" repository
- change debian/config/defines e.g.:
	- abiname: 1+lernstick.1
- build with gcc-4.9, carefully replace gcc-5 references:
	vi debian/config/defines
	sed -i 's/gcc-5/gcc-4.9/g' \
		debian/config/amd64/defines
		debian/config/i386/defines
		debian/control
		debian/rules.gen
		debian/templates/control.extra.in
- build all packages (in pbuilder chroot, see backports.txt):
	- make -f debian/rules clean
	- apt-get install vim
	- dch --local +lernstick. (use "lernstick-8-backports-staging" as distribution)
	- make -f debian/rules clean
	- fakeroot make -f debian/rules.gen setup_i386_none_686-pae
	- fakeroot make -f debian/rules.gen binary-arch_i386_none_686-pae binary-indep DEBIAN_KERNEL_JOBS=8
	- fakeroot make -f debian/rules.gen setup_i386_none_686
	- fakeroot make -f debian/rules.gen binary-arch_i386_none_686 binary-indep DEBIAN_KERNEL_JOBS=8
- build common headers:
	- fakeroot make -f debian/rules.gen binary-arch_i386_none_real
- build linux-compiler package:
	- fakeroot make -f debian/rules.gen binary-arch_i386_extra
- build libc-dev package:
	- fakeroot make -f debian/rules.gen binary-libc-dev_i386

all in one line (for easy copy&pasting):
fakeroot make -f debian/rules.gen setup_i386_none_686-pae; fakeroot make -f debian/rules.gen binary-arch_i386_none_686-pae binary-indep DEBIAN_KERNEL_JOBS=8; fakeroot make -f debian/rules.gen setup_i386_none_686; fakeroot make -f debian/rules.gen binary-arch_i386_none_686 binary-indep DEBIAN_KERNEL_JOBS=8; fakeroot make -f debian/rules.gen binary-arch_i386_none_real; fakeroot make -f debian/rules.gen binary-arch_i386_extra; fakeroot make -f debian/rules.gen binary-libc-dev_i386
